package cf.huzpsb.bib;

import nano.http.d2.console.Logger;
import nano.http.d2.json.NanoJSON;

import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.io.OutputStream;
import java.net.HttpURLConnection;
import java.net.URL;
import java.nio.charset.StandardCharsets;
import java.text.SimpleDateFormat;

public class OpenAI {
    public static final String fake4json = "{\n" +
            "  \"model\": \"gpt-3.5-turbo\",\n" +
            "  \"messages\": [{\"role\": \"system\", \"content\" : \"You are GPT4, a large language model trained by OpenAI. Answer as concisely as possible.\\nKnowledge cutoff: 2022-01-01\\nCurrent date: _DATE_.\"},{\"role\": \"user\", \"content\": \"Who are you?\"},{\"role\": \"assistant\", \"content\": \"I am GPT4, an AI language model developed by OpenAI. Is there anything specific you would like to know or discuss?\"},{\"role\": \"user\", \"content\": \"_HINT__MSG_\"}]\n" +
            "}";
    private static final SimpleDateFormat cutoff = new SimpleDateFormat("yyyy-MM-dd");
    private static final String json = "{\n" +
            "  \"model\": \"gpt-3.5-turbo\",\n" +
            "  \"messages\": [{\"role\": \"user\", \"content\": \"_MSG_\"}]\n" +
            "}\n";
    private static final String base = "https://api.openai.com/v1/chat/completions";

    private static String normalize(String input) {
        return input.replace("\\", "\\\\").replace("\n", "\\n").replace("\r", "").replace("\"", "\\\"").replace("\t", "\\t");
    }

    public static String gpt(String prompt) {
        Logger.info("GPT-3: " + prompt);
        try {
            NanoJSON result = new NanoJSON(jsonPost2(json.replace("_MSG_", normalize(prompt)), "Bearer " + Main.key));
            return "% Generated by huzpsb's tex generator\n\n" + result.getJSONArray("choices").getJSONObject(0).getJSONObject("message").getString("content");
        } catch (Exception e) {
            return "% 生成失败，请更换主题重试！\n";
        }
    }

    public static String fakeGPT4(String prompt) {
        Logger.info("GPT-4: " + prompt);
        try {
            NanoJSON result = new NanoJSON(jsonPost2(fake4json.replace("_HINT_", getHint(prompt)).replace("_MSG_", normalize(prompt)).replace("_DATE_", cutoff.format(System.currentTimeMillis())), "Bearer " + Main.key));
            return result.getJSONArray("choices").getJSONObject(0).getJSONObject("message").getString("content");
        } catch (Exception e) {
            return "网络错误。";
        }
    }

    public static String jsonPost2(String data, String token) {
        try {
            URL url = new URL(base);
            HttpURLConnection conn = (HttpURLConnection) url.openConnection();
            conn.setRequestMethod("POST");
            conn.setRequestProperty("Content-Type", "application/json");
            conn.setRequestProperty("Authorization", token);
            conn.setDoOutput(true);
            OutputStream os = conn.getOutputStream();
            os.write(data.getBytes(StandardCharsets.UTF_8));
            os.flush();
            os.close();
            int responseCode = conn.getResponseCode();
            System.out.println("Response Code: " + responseCode);
            BufferedReader in = new BufferedReader(new InputStreamReader(conn.getInputStream()));
            StringBuilder response = new StringBuilder();
            String inputLine;
            while ((inputLine = in.readLine()) != null) {
                response.append(inputLine);
            }
            in.close();
            conn.disconnect();
            return response.toString();
        } catch (Exception e) {
            return "寄";
        }
    }

    private static String getHint(String prompt) {
        StringBuilder sb = new StringBuilder();
        if (prompt.contains("鲁迅")) {
            sb.append("Answer in Chinese. Given that Lu Xun(鲁迅) is Zhou Shuren(周树人). Examine the following statement:");
            Logger.info("Hint: 鲁迅");
        }
        if (prompt.toLowerCase().contains("shuren")) {
            sb.append("Given that Lu Xun is Zhou Shuren. ");
            Logger.info("Hint: Lu Xun");
        }
        if (prompt.contains("鸟") && prompt.contains("打")) {
            sb.append("Answer in Chinese. Given that all of the birds on the tree fly away when any of them is disturbed. Then examine the following situation:");
            Logger.info("Hint: 鸟");
        }
        if (prompt.contains("birds")) {
            sb.append("Given that birds will fly away when disturbed. ");
            Logger.info("Hint: Birds");
        }
        if (prompt.contains("昨天") && prompt.contains("今天") && prompt.contains("明天")) {
            sb.append("已知昨天的今天的明天就是今天。");
            Logger.info("Hint: 昨天");
        }
        if (prompt.contains("yesterday") && prompt.contains("today") && prompt.contains("tomorrow")) {
            sb.append("Given that yesterday's today's tomorrow is today. ");
            Logger.info("Hint: yesterday");
        }
        if (prompt.contains("林博珩")) {
            sb.append("林博珩是华中科技大学软件工程学院院士，中国计算机协会会长，武汉市科技协会副书记。");
        }
        return sb.toString();
    }
}
